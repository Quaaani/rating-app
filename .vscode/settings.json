{
  "css.validate": false,
  "cSpell.words": ["callout", "Parens", "stylelint", "svgr", "vercel"],
  "folderTemplates.fileTemplates": {
    "Component": [
      "import {FC} from 'react'",
      "import {<FTName | pascalcase>Props} from './<FTName>.types'",
      "",
      "import styles from './<FTName>.module.css'",
      "import classNames from 'classnames'",
      "",
      "export const <FTName | pascalcase>: FC<<FTName | pascalcase>Props> = ({className}) => {",
      "  const rootClassNames = classNames(className, styles.root)",
      "",
      "  return <div className={rootClassNames}><FTName | pascalcase> Component</div>",
      "}",
      ""
    ],
    "Component Types": [
      "import {DetailedHTMLProps, HTMLAttributes} from 'react'",
      "",
      "export interface <FTName | pascalcase>Props extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}",
      ""
    ],
    "Styles": [".root {}", ""],
    "Component Public API": ["export * from './<FTName>'", ""],

    "View": [
      "import {FC} from 'react'",
      "import {<FTName | pascalcase>ViewProps} from './<FTName>-view.types'",
      "",
      "import styles from './<FTName>-view.module.css'",
      "import classNames from 'classnames'",
      "",
      "export const <FTName | pascalcase>View: FC<<FTName | pascalcase>ViewProps> = ({className}) => {",
      "  const rootClassNames = classNames(className, styles.root)",
      "",
      "  return <div className={rootClassNames}><FTName | pascalcase>View</div>",
      "}",
      ""
    ],
    "View Types": [
      "import {DetailedHTMLProps, HTMLAttributes} from 'react'",
      "",
      "export interface <FTName | pascalcase>ViewProps extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}",
      ""
    ],
    "View Public API": ["export * from './<FTName>-view'", ""],

    "Layout": [
      "import {FC, PropsWithChildren} from 'react'",
      "import {<FTName | pascalcase>LayoutProps} from './<FTName>-layout.types'",
      "",
      "import styles from './<FTName>-layout.module.css'",
      "import classNames from 'classnames'",
      "",
      "export const <FTName | pascalcase>Layout: FC<PropsWithChildren<<FTName | pascalcase>LayoutProps>> = ({children, className}) => {",
      "  const rootClassNames = classNames(className, styles.root)",
      "",
      "  return (",
      "    <div className={rootClassNames}>",
      "      <FTName | pascalcase>Layout",
      "      {children}",
      "    </div>",
      "  )",
      "}",
      ""
    ],
    "Layout Types": [
      "import {DetailedHTMLProps, HTMLAttributes} from 'react'",
      "",
      "export interface <FTName | pascalcase>LayoutProps extends DetailedHTMLProps<HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}",
      ""
    ],
    "Layout Public API": ["export * from './<FTName>-layout'", ""],

    "AppRouting: Page": [
      "import {<FTName | pascalcase>View} from '@views'",
      "",
      "export default <FTName | pascalcase>View",
      ""
    ],

    "AppRouting: Layout": [
      "import {<FTName | pascalcase>Layout} from '@layouts'",
      "import {Metadata} from 'next'",
      "",
      "export const metadata: Metadata = {",
      "  title: '<FTName | pascalcase>',",
      "  description: '<FTName | pascalcase> Description',",
      "}",
      "",
      "export default <FTName | pascalcase>Layout",
      ""
    ]
  },
  "folderTemplates.structures": [
    {
      "name": "Create Component",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>/<FTName>.tsx",
          "template": "Component"
        },
        {
          "fileName": "<FTName>/<FTName>.types.ts",
          "template": "Component Types"
        },
        {
          "fileName": "<FTName>/<FTName>.module.css",
          "template": "Styles"
        },
        {
          "fileName": "<FTName>/index.ts",
          "template": "Component Public API"
        }
      ]
    },
    {
      "name": "Create View",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>-view/<FTName>-view.tsx",
          "template": "View"
        },
        {
          "fileName": "<FTName>-view/<FTName>-view.types.ts",
          "template": "View Types"
        },
        {
          "fileName": "<FTName>-view/<FTName>-view.module.css",
          "template": "Styles"
        },
        {
          "fileName": "<FTName>-view/index.ts",
          "template": "View Public API"
        }
      ]
    },
    {
      "name": "Create Layout",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>-layout/<FTName>-layout.tsx",
          "template": "Layout"
        },
        {
          "fileName": "<FTName>-layout/<FTName>-layout.types.ts",
          "template": "Layout Types"
        },
        {
          "fileName": "<FTName>-layout/<FTName>-layout.module.css",
          "template": "Styles"
        },
        {
          "fileName": "<FTName>-layout/index.ts",
          "template": "Layout Public API"
        }
      ]
    },
    {
      "name": "Create AppRouting: Page",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName>/page.tsx",
          "template": "AppRouting: Page"
        }
      ]
    },
    {
      "name": "Create AppRouting: Layout",
      "customVariables": [],
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "layout.tsx",
          "template": "AppRouting: Layout"
        }
      ]
    }
  ],
  "cSpell.language": "en,ru"
}
